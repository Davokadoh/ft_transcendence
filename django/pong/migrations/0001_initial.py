# Generated by Django 5.0 on 2024-03-07 09:19

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import pong.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('profil_picture', models.ImageField(default=None, max_length=255, storage=pong.models.OverwriteStorage(), upload_to=pong.models.user_directory_path)),
                ('profil_picture_oauth', models.URLField(max_length=255)),
                ('groups', models.CharField(max_length=255)),
                ('user_permissions', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('is_staff', models.CharField(max_length=255)),
                ('is_superuser', models.CharField(max_length=255)),
                ('is_active', models.CharField(max_length=255)),
                ('channel_name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=10)),
                ('paddleSpeed', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('ballSpeed', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('paddleColor', models.CharField(blank=True, default='#feffff', max_length=50)),
                ('ballColor', models.CharField(blank=True, default='#feffff', max_length=50)),
                ('backgroundColor', models.CharField(blank=True, default='#000000', max_length=50)),
                ('blocked_users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('chats', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('friends', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participants', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='conversations',
            field=models.ManyToManyField(to='pong.conversation'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='conversation',
            name='messages',
            field=models.ManyToManyField(to='pong.message'),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('LOBBY', 'Lobby'), ('PLAY', 'Play'), ('PAUSE', 'Pause'), ('END', 'End')], default='LOBBY', max_length=5)),
                ('max_points', models.PositiveSmallIntegerField(default=5)),
                ('score', models.CharField(default='0 - 0', max_length=5)),
                ('opponent', models.CharField(default=None, max_length=255, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('style', models.CharField(default='not defined', max_length=100)),
                ('tournament_round', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pong.round')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_player', models.PositiveSmallIntegerField(default=2)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='round',
            name='teams',
            field=models.ManyToManyField(to='pong.team'),
        ),
        migrations.CreateModel(
            name='GameTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pong.game')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pong.team')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='teams',
            field=models.ManyToManyField(through='pong.GameTeam', to='pong.team'),
        ),
        migrations.AddField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_won', to='pong.team'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('ENDED', 'Ended')], default='OPEN', max_length=6)),
                ('max_teams', models.PositiveIntegerField(default=4)),
                ('teams', models.ManyToManyField(blank=True, related_name='joined_tournaments', to='pong.team')),
            ],
        ),
        migrations.AddField(
            model_name='round',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pong.tournament'),
        ),
    ]
